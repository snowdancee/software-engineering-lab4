# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CheckingWnd.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import copy, random, re
import os.path

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

def get_next_pair(pairs, recent):
    if not pairs:
        return None
    for i in pairs:
        if i[0] == recent[0] or i[1] == recent[0] or i[0] == recent[1] or i[1] == recent[1]:
            return i
    return pairs[random.randint(0, len(pairs) - 1)]

def load_file(file):
    file = open(file)
    fpr = ''.join([s for s in file.readlines()])
    file.close()
    return fpr

def write_file(file, path):
    file = open(file, 'w')
    file.write('file1, file2\n')
    for i in path:
        file.write(i[0] + ', ' + i[1] + '\n')
    file.close()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow, file):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(888, 555)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.textBrowser_1 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_1.setObjectName("textBrowser_1")
        self.horizontalLayout.addWidget(self.textBrowser_1)
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.horizontalLayout.addWidget(self.textBrowser_2)

        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.horizontalLayout.addWidget(self.splitter)
        self.horizontalLayout.addWidget(self.splitter)
        self.eqButton = QtWidgets.QPushButton(self.splitter)
        self.eqButton.setObjectName("eqButton")
        self.eqButton.clicked.connect(self.eqButtonPushed)
        self.neqButton = QtWidgets.QPushButton(self.splitter)
        self.neqButton.setObjectName("neqButton")
        self.neqButton.clicked.connect(self.neqButtonPushed)
        self.abnButton = QtWidgets.QPushButton(self.splitter)
        self.abnButton.setObjectName("abnButton")
        self.abnButton.clicked.connect(self.abnButtonPushed)

        self.remainLabel = QtWidgets.QLabel(self.splitter)
        self.remainLabel.setObjectName("label")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1045, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.filename = file
        file = open(file)
        file.readline()
        self.equal_pairs = [tuple(''.join(re.split(' |\t|\n|\r', s)).split(',')) for s in file.readlines()]
        file.close()
        self.uncompared = copy.deepcopy(self.equal_pairs)
        self.now_compare = self.uncompared[random.randint(0, len(self.uncompared) - 1)]  # 当前比对的对
        self.textBrowser_1.setText(load_file(self.now_compare[0]))
        self.textBrowser_2.setText(load_file(self.now_compare[1]))
        self.remainLabel.setText(self.remainLabel.text() + str(len(self.uncompared)))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "交互确认等价性工具"))
        self.eqButton.setText(_translate("MainWindow", "等价"))
        self.neqButton.setText(_translate("MainWindow", "不等价"))
        self.abnButton.setText(_translate("MainWindow", "存疑"))
        self.remainLabel.setText(_translate("MainWindow", "未确认对数:"))

    def neqButtonPushed(self):
        self.equal_pairs.remove(self.now_compare)
        write_file(self.filename, self.equal_pairs)
        self.uncompared.remove(self.now_compare)
        self.now_compare = get_next_pair(self.uncompared, self.now_compare)

        if self.now_compare == None:
            msg_box = QMessageBox(QMessageBox.Information, 'INFO', '确认完毕')
            msg_box.exec_()
            QtCore.QCoreApplication.instance().quit()
            return

        self.textBrowser_1.setText(load_file(self.now_compare[0]))
        self.textBrowser_2.setText(load_file(self.now_compare[1]))
        s = self.remainLabel.text()
        self.remainLabel.setText(s[:s.find(':') + 1] + str(len(self.uncompared)))

    def abnButtonPushed(self):
        self.uncompared.remove(self.now_compare)
        self.now_compare = get_next_pair(self.uncompared, self.now_compare)

        if self.now_compare == None:
            msg_box = QMessageBox(QMessageBox.Information, 'INFO', '确认完毕')
            msg_box.exec_()
            QtCore.QCoreApplication.instance().quit()
            return

        self.textBrowser_1.setText(load_file(self.now_compare[0]))
        self.textBrowser_2.setText(load_file(self.now_compare[1]))
        s = self.remainLabel.text()
        self.remainLabel.setText(s[:s.find(':') + 1] + str(len(self.uncompared)))

    def eqButtonPushed(self):
        self.uncompared.remove(self.now_compare)
        self.now_compare = get_next_pair(self.uncompared, self.now_compare)

        if self.now_compare == None:
            msg_box = QMessageBox(QMessageBox.Information, 'INFO', '确认完毕')
            msg_box.exec_()
            QtCore.QCoreApplication.instance().quit()
            return

        self.textBrowser_1.setText(load_file(self.now_compare[0]))
        self.textBrowser_2.setText(load_file(self.now_compare[1]))
        s = self.remainLabel.text()
        self.remainLabel.setText(s[:s.find(':') + 1] + str(len(self.uncompared)))